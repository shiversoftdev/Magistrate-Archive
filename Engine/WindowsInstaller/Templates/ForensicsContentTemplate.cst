//cst
//?using System;
//?using System.Collections.Generic;
//?using System.Diagnostics;
//?using System.IO;
//?using System.Linq;
//?using System.Text;
//?using System.Threading.Tasks;
internal sealed class ForensicsContentTemplate : CheckTemplate
{
private readonly SafeString FilePath;
/// <summary>
/// A file version check template
/// </summary>
/// <param name="args">[0:FilePath]</param>
internal ForensicsContentTemplate(params string[] args)
{
if (args.Length < 1)
Enabled = false;
FilePath = args[0];
}
internal override uint TickDelay { get => 30000;
}
internal override SafeString CompletedMessage
{
get
{
return "Forensics check passed.";
}
}
internal override SafeString FailedMessage
{
get
{
return "Forensics check failed.";
}
}
/// <summary>
/// Get the check value
/// </summary>
/// <returns></returns>
internal override async Task<byte[]> GetCheckValue()
{
if (!File.Exists(FilePath))
{
return PrepareState32("");
}
var Contents = await Task.FromResult(PrepareState32(File.ReadAllText(FilePath).Trim()));
return Contents;
}
}
